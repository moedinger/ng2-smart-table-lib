{"version":3,"file":"checkbox-filter.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/filter/filter-types/checkbox-filter.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AACxE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,gCAAgC,CAAC;AAUxC,IAAa,uBAAuB;IAAS,2CAAa;IAMxD;QAAA,YACE,iBAAO,SACR;QAND,kBAAY,GAAY,KAAK,CAAC;QAC9B,kBAAY,GAAG,IAAI,WAAW,EAAE,CAAC;QACvB,kBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;;IAIjD,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY;aACtD,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aACxB,SAAS,CAAC,UAAC,OAAgB;YAC1B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAM,OAAO,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;YAC9F,IAAM,QAAQ,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;YACjG,KAAI,CAAC,KAAK,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC;YAC1C,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QACpB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACH,8BAAC;AAAD,CAAC,AAhCD,CAA6C,aAAa,GAgCzD;AA5BW;IAAT,MAAM,EAAE;;6DAAwC;AAJtC,uBAAuB;IARnC,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE,sQAIT;KACF,CAAC;;GACW,uBAAuB,CAgCnC;SAhCY,uBAAuB","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { DefaultFilter } from './default-filter';\nimport 'rxjs/add/operator/debounceTime';\n\n@Component({\n  selector: 'checkbox-filter',\n  template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n})\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\n\n  filterActive: boolean = false;\n  inputControl = new FormControl();\n  @Output() sFormControl = new EventEmitter<any>();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.changesSubscription = this.inputControl.valueChanges\n      .debounceTime(this.delay)\n      .subscribe((checked: boolean) => {\n        this.filterActive = true;\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n        this.query = checked ? trueVal : falseVal;\n        this.setFilter();\n      });\n    this.sFormControl.emit({ control: this });\n  }\n\n  resetFilter(event: any) {\n    if (event) {\n      event.preventDefault();\n    }\n    this.query = '';\n    this.inputControl.setValue(false, { emitEvent: false });\n    this.filterActive = false;\n    this.setFilter();\n  }\n}\n"]}